// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// GPFit
Rcpp::List GPFit(const arma::vec& y_train, const arma::mat& X_train, const arma::mat& X_test, const arma::mat& K_train, const arma::mat& K_test, const double sigma_sq, const double sigma_sq_mu, const double lambda, const double rate_tau, const double shape_tau, const int nburn, const int nthin, const int nsave, const int update_sigma_sq_mu, const int update_lambda);
RcppExport SEXP _GPBart_GPFit(SEXP y_trainSEXP, SEXP X_trainSEXP, SEXP X_testSEXP, SEXP K_trainSEXP, SEXP K_testSEXP, SEXP sigma_sqSEXP, SEXP sigma_sq_muSEXP, SEXP lambdaSEXP, SEXP rate_tauSEXP, SEXP shape_tauSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nsaveSEXP, SEXP update_sigma_sq_muSEXP, SEXP update_lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y_train(y_trainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_train(X_trainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_test(X_testSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type K_train(K_trainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type K_test(K_testSEXP);
    Rcpp::traits::input_parameter< const double >::type sigma_sq(sigma_sqSEXP);
    Rcpp::traits::input_parameter< const double >::type sigma_sq_mu(sigma_sq_muSEXP);
    Rcpp::traits::input_parameter< const double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const double >::type rate_tau(rate_tauSEXP);
    Rcpp::traits::input_parameter< const double >::type shape_tau(shape_tauSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nsave(nsaveSEXP);
    Rcpp::traits::input_parameter< const int >::type update_sigma_sq_mu(update_sigma_sq_muSEXP);
    Rcpp::traits::input_parameter< const int >::type update_lambda(update_lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(GPFit(y_train, X_train, X_test, K_train, K_test, sigma_sq, sigma_sq_mu, lambda, rate_tau, shape_tau, nburn, nthin, nsave, update_sigma_sq_mu, update_lambda));
    return rcpp_result_gen;
END_RCPP
}
// TreeCompress
arma::mat TreeCompress(double& alpha, double& beta, arma::vec& cov_select, arma::mat& X);
RcppExport SEXP _GPBart_TreeCompress(SEXP alphaSEXP, SEXP betaSEXP, SEXP cov_selectSEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type cov_select(cov_selectSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(TreeCompress(alpha, beta, cov_select, X));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _GPBart_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// GetRankKernCat
arma::mat GetRankKernCat(const arma::mat& ranks, const arma::mat& cats);
RcppExport SEXP _GPBart_GetRankKernCat(SEXP ranksSEXP, SEXP catsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type ranks(ranksSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cats(catsSEXP);
    rcpp_result_gen = Rcpp::wrap(GetRankKernCat(ranks, cats));
    return rcpp_result_gen;
END_RCPP
}
// GetRankKern
arma::mat GetRankKern(const arma::mat& ranks);
RcppExport SEXP _GPBart_GetRankKern(SEXP ranksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type ranks(ranksSEXP);
    rcpp_result_gen = Rcpp::wrap(GetRankKern(ranks));
    return rcpp_result_gen;
END_RCPP
}
// test_const_ref
void test_const_ref(const arma::mat& m);
RcppExport SEXP _GPBart_test_const_ref(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type m(mSEXP);
    test_const_ref(m);
    return R_NilValue;
END_RCPP
}
// log_sum_exp
double log_sum_exp(arma::vec x);
RcppExport SEXP _GPBart_log_sum_exp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(log_sum_exp(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GPBart_GPFit", (DL_FUNC) &_GPBart_GPFit, 15},
    {"_GPBart_TreeCompress", (DL_FUNC) &_GPBart_TreeCompress, 4},
    {"_GPBart_rcpp_hello_world", (DL_FUNC) &_GPBart_rcpp_hello_world, 0},
    {"_GPBart_GetRankKernCat", (DL_FUNC) &_GPBart_GetRankKernCat, 2},
    {"_GPBart_GetRankKern", (DL_FUNC) &_GPBart_GetRankKern, 1},
    {"_GPBart_test_const_ref", (DL_FUNC) &_GPBart_test_const_ref, 1},
    {"_GPBart_log_sum_exp", (DL_FUNC) &_GPBart_log_sum_exp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_GPBart(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
